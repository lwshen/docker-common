name: Build Maven Docker

on:
  pull_request:
  push:
    paths:
      - maven/**
      - .github/workflows/maven.yml

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker-file:
          - path: maven/eclipse-temurin-8
            image: shenlw/maven
            tags: 3.8.4-jdk-8, 3.8-jdk-8, 3-jdk-8, 3.8.4-eclipse-temurin-8, 3.8-eclipse-temurin-8, 3-eclipse-temurin-8
            platforms: linux/amd64,linux/arm64,linux/arm/v7

          - path: maven/eclipse-temurin-11
            image: shenlw/maven
            tags: 3.8.4-jdk-11, 3.8-jdk-11, 3-jdk-11, 3.8.4-eclipse-temurin-11, 3.8-eclipse-temurin-11, 3-eclipse-temurin-11
            platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/s390x

          - path: maven/eclipse-temurin-17
            image: shenlw/maven
            tags: 3.8.4-jdk-17, 3.8-jdk-17, 3-jdk-17, 3.8.4-eclipse-temurin-17, 3.8-eclipse-temurin-17, 3-eclipse-temurin-17
            platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/s390x

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=${{ matrix.docker-file.image }}

          TAGZ=$(echo ${{ matrix.docker-file.tags }} | tr "," "\n")
          VERSION=${TAGZ[0]}

          for tag in $TAGZ
          do
            TAGS="${TAGS},${DOCKER_IMAGE}:${tag}"
          done

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}

          find ./maven -maxdepth 1 -type d -exec cp -r ./maven/settings-docker.xml {} \;
          find ./maven -maxdepth 1 -type d -exec cp -r ./maven/mvn-entrypoint.sh {} \;

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          install: true

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Docker Buildx (build)
        uses: docker/build-push-action@v2.7.0
        if: success() && !contains(github.ref, 'master')
        with:
          push: false
          context: ./${{ matrix.docker-file.path }}
          file: ./${{ matrix.docker-file.path }}/Dockerfile
          build-args: REFRESHED_AT=$(date +%Y-%m-%d)
          platforms: ${{ matrix.docker-file.platforms }}
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Docker Login
        if: success() && contains(github.ref, 'master')
        uses: docker/login-action@v1.12.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Buildx (push)
        uses: docker/build-push-action@v2.7.0
        if: success() && contains(github.ref, 'master')
        with:
          push: true
          context: ./${{ matrix.docker-file.path }}
          file: ./${{ matrix.docker-file.path }}/Dockerfile
          build-args: REFRESHED_AT=$(date +%Y-%m-%d)
          platforms: ${{ matrix.docker-file.platforms }}
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Docker Check Manifest
        if: always() && github.event_name != 'pull_request' && contains(github.ref, 'master')
        run: |
          docker run --rm mplatform/mquery ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}

      - name: Clear
        if: always() && github.event_name != 'pull_request'
        run: |
          rm -f ${HOME}/.docker/config.json