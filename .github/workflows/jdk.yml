name: Build JDK Docker

on:
  workflow_dispatch:
  pull_request:
    paths:
      - jdk/**
      - .github/workflows/jdk.yml
      - constants.env
  push:
    branches:
      - main
      - master
    paths:
      - jdk/**
      - .github/workflows/jdk.yml
      - constants.env

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker-file:
          - path: jdk/8
            image: shenlw/jdk
            tags: 8,8-eclipse-temurin
            platforms: linux/amd64,linux/arm64,linux/arm/v7

          - path: jdk/11
            image: shenlw/jdk
            tags: 11,11-eclipse-temurin
            platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/s390x

          - path: jdk/17
            image: shenlw/jdk
            tags: 17,17-eclipse-temurin
            platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/s390x

          - path: jdk/21
            image: shenlw/jdk
            tags: 21,21-eclipse-temurin
            platforms: linux/amd64,linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=${{ matrix.docker-file.image }}

          TAGZ=$(echo ${{ matrix.docker-file.tags }} | tr "," "\n")
          VERSION=${TAGZ[0]}

          for tag in $TAGZ
          do
            TAGS="${TAGS},${DOCKER_IMAGE}:${tag}"
          done

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          install: true

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - uses: cardinalby/export-env-action@v2
        with:
          envFile: "constants.env"
          expand: "true"

      - name: Docker Buildx (build)
        uses: docker/build-push-action@v2.7.0
        if: success() && !contains(github.ref, 'master')
        with:
          push: false
          context: ./${{ matrix.docker-file.path }}
          file: ./${{ matrix.docker-file.path }}/Dockerfile
          build-args: |
            REFRESHED_AT=$(date +%Y-%m-%d)
            JDK8_VERSION=${{ env.JDK8_VERSION }}
            JDK8_UPDATE=${{ env.JDK8_UPDATE }}
            JDK8_BUILD=${{ env.JDK8_BUILD }}
            JDK11_VERSION=${{ env.JDK11_VERSION }}
            JDK11_UPDATE=${{ env.JDK11_UPDATE }}
            JDK11_BUILD=${{ env.JDK11_BUILD }}
            JDK17_VERSION=${{ env.JDK17_VERSION }}
            JDK17_UPDATE=${{ env.JDK17_UPDATE }}
            JDK17_BUILD=${{ env.JDK17_BUILD }}
            JDK21_VERSION=${{ env.JDK21_VERSION }}
            JDK21_UPDATE=${{ env.JDK21_UPDATE }}
            JDK21_BUILD=${{ env.JDK21_BUILD }}
          platforms: ${{ matrix.docker-file.platforms }}
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Docker Login
        if: success() && contains(github.ref, 'master')
        uses: docker/login-action@v1.12.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Buildx (push)
        uses: docker/build-push-action@v2.7.0
        if: success() && contains(github.ref, 'master')
        with:
          push: true
          context: ./${{ matrix.docker-file.path }}
          file: ./${{ matrix.docker-file.path }}/Dockerfile
          build-args: |
            REFRESHED_AT=$(date +%Y-%m-%d)
            JDK8_VERSION=${{ env.JDK8_VERSION }}
            JDK8_UPDATE=${{ env.JDK8_UPDATE }}
            JDK8_BUILD=${{ env.JDK8_BUILD }}
            JDK11_VERSION=${{ env.JDK11_VERSION }}
            JDK11_UPDATE=${{ env.JDK11_UPDATE }}
            JDK11_BUILD=${{ env.JDK11_BUILD }}
            JDK17_VERSION=${{ env.JDK17_VERSION }}
            JDK17_UPDATE=${{ env.JDK17_UPDATE }}
            JDK17_BUILD=${{ env.JDK17_BUILD }}
            JDK21_VERSION=${{ env.JDK21_VERSION }}
            JDK21_UPDATE=${{ env.JDK21_UPDATE }}
            JDK21_BUILD=${{ env.JDK21_BUILD }}
          platforms: ${{ matrix.docker-file.platforms }}
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Clear
        if: always() && github.event_name != 'pull_request'
        run: |
          rm -f ${HOME}/.docker/config.json
