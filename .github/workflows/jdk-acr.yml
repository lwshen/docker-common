name: Build JDK Docker (ACR)

on:
  workflow_dispatch:
  pull_request:
    paths:
      - jdk/**
      - .github/workflows/jdk-acr.yml
  push:
    branches:
      - main
      - master
    paths:
      - jdk/**
      - .github/workflows/jdk-acr.yml

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker-file:
          - path: jdk/8
            image: registry.cn-shanghai.aliyuncs.com/lwshen/jdk
            tags: 8,8-eclipse-temurin
            platforms: linux/amd64,linux/arm64

          - path: jdk/11
            image: registry.cn-shanghai.aliyuncs.com/lwshen/jdk
            tags: 11,11-eclipse-temurin
            platforms: linux/amd64,linux/arm64

          - path: jdk/17
            image: registry.cn-shanghai.aliyuncs.com/lwshen/jdk
            tags: 17,17-eclipse-temurin
            platforms: linux/amd64,linux/arm64

          - path: jdk/21
            image: registry.cn-shanghai.aliyuncs.com/lwshen/jdk
            tags: 21,21-eclipse-temurin
            platforms: linux/amd64,linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=${{ matrix.docker-file.image }}

          TAGZ=$(echo ${{ matrix.docker-file.tags }} | tr "," "\n")
          VERSION=${TAGZ[0]}

          for tag in $TAGZ
          do
            TAGS="${TAGS},${DOCKER_IMAGE}:${tag}"
          done

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}

      - name: Docker Buildx (build)
        uses: docker/build-push-action@v2.7.0
        if: success() && !contains(github.ref, 'master')
        with:
          push: false
          context: ./${{ matrix.docker-file.path }}
          file: ./${{ matrix.docker-file.path }}/Dockerfile
          build-args: REFRESHED_AT=$(date +%Y-%m-%d)
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Login to Aliyun Container Registry (ACR)
        uses: aliyun/acr-login@v1
        if: success() && contains(github.ref, 'master')
        with:
          login-server: https://registry.cn-shanghai.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"

      - name: Docker Buildx (push)
        uses: docker/build-push-action@v2.7.0
        if: success() && contains(github.ref, 'master')
        with:
          push: true
          context: ./${{ matrix.docker-file.path }}
          file: ./${{ matrix.docker-file.path }}/Dockerfile
          build-args: REFRESHED_AT=$(date +%Y-%m-%d)
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Clear
        if: always() && github.event_name != 'pull_request'
        run: |
          rm -f ${HOME}/.docker/config.json
