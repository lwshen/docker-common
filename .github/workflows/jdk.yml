name: Build JDK Docker

on:
  workflow_dispatch:
  pull_request:
    paths:
      - jdk/**
      - .github/workflows/jdk.yml
      - constants.env
  push:
    branches:
      - main
      - master
    paths:
      - jdk/**
      - .github/workflows/jdk.yml
      - constants.env

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker-file:
          - path: jdk/8
            image: shenlw/jdk
            tags: 8,8-eclipse-temurin
            platforms: linux/amd64,linux/arm64,linux/arm/v7

          - path: jdk/11
            image: shenlw/jdk
            tags: 11,11-eclipse-temurin
            platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/s390x

          - path: jdk/17
            image: shenlw/jdk
            tags: 17,17-eclipse-temurin
            platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/s390x

          - path: jdk/21
            image: shenlw/jdk
            tags: 21,21-eclipse-temurin
            platforms: linux/amd64,linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Load constants from env file
        run: |
          set -a
          source constants.env
          set +a
          echo "JDK8_VERSION=${JDK8_VERSION}" >> $GITHUB_ENV
          echo "JDK8_UPDATE=${JDK8_UPDATE}" >> $GITHUB_ENV
          echo "JDK8_BUILD=${JDK8_BUILD}" >> $GITHUB_ENV
          echo "JDK11_VERSION=${JDK11_VERSION}" >> $GITHUB_ENV
          echo "JDK11_UPDATE=${JDK11_UPDATE}" >> $GITHUB_ENV
          echo "JDK11_BUILD=${JDK11_BUILD}" >> $GITHUB_ENV
          echo "JDK17_VERSION=${JDK17_VERSION}" >> $GITHUB_ENV
          echo "JDK17_UPDATE=${JDK17_UPDATE}" >> $GITHUB_ENV
          echo "JDK17_BUILD=${JDK17_BUILD}" >> $GITHUB_ENV
          echo "JDK21_VERSION=${JDK21_VERSION}" >> $GITHUB_ENV
          echo "JDK21_UPDATE=${JDK21_UPDATE}" >> $GITHUB_ENV
          echo "JDK21_BUILD=${JDK21_BUILD}" >> $GITHUB_ENV

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=${{ matrix.docker-file.image }}

          TAGZ=$(echo ${{ matrix.docker-file.tags }} | tr "," "\n")
          VERSION=${TAGZ[0]}

          for tag in $TAGZ
          do
            TAGS="${TAGS},${DOCKER_IMAGE}:${tag}"
          done

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          install: true

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Docker Buildx (build)
        uses: docker/build-push-action@v2.7.0
        if: success() && !contains(github.ref, 'master')
        with:
          push: false
          context: ./${{ matrix.docker-file.path }}
          file: ./${{ matrix.docker-file.path }}/Dockerfile
          build-args: |
            REFRESHED_AT=$(date +%Y-%m-%d)
            ${{ matrix.docker-file.path == 'jdk/8' && format('JDK8_VERSION={0}', env.JDK8_VERSION) || '' }}
            ${{ matrix.docker-file.path == 'jdk/8' && format('JDK8_UPDATE={0}', env.JDK8_UPDATE) || '' }}
            ${{ matrix.docker-file.path == 'jdk/8' && format('JDK8_BUILD={0}', env.JDK8_BUILD) || '' }}
            ${{ matrix.docker-file.path == 'jdk/11' && format('JDK11_VERSION={0}', env.JDK11_VERSION) || '' }}
            ${{ matrix.docker-file.path == 'jdk/11' && format('JDK11_UPDATE={0}', env.JDK11_UPDATE) || '' }}
            ${{ matrix.docker-file.path == 'jdk/11' && format('JDK11_BUILD={0}', env.JDK11_BUILD) || '' }}
            ${{ matrix.docker-file.path == 'jdk/17' && format('JDK17_VERSION={0}', env.JDK17_VERSION) || '' }}
            ${{ matrix.docker-file.path == 'jdk/17' && format('JDK17_UPDATE={0}', env.JDK17_UPDATE) || '' }}
            ${{ matrix.docker-file.path == 'jdk/17' && format('JDK17_BUILD={0}', env.JDK17_BUILD) || '' }}
            ${{ matrix.docker-file.path == 'jdk/21' && format('JDK21_VERSION={0}', env.JDK21_VERSION) || '' }}
            ${{ matrix.docker-file.path == 'jdk/21' && format('JDK21_UPDATE={0}', env.JDK21_UPDATE) || '' }}
            ${{ matrix.docker-file.path == 'jdk/21' && format('JDK21_BUILD={0}', env.JDK21_BUILD) || '' }}
          platforms: ${{ matrix.docker-file.platforms }}
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Docker Login
        if: success() && contains(github.ref, 'master')
        uses: docker/login-action@v1.12.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Buildx (push)
        uses: docker/build-push-action@v2.7.0
        if: success() && contains(github.ref, 'master')
        with:
          push: true
          context: ./${{ matrix.docker-file.path }}
          file: ./${{ matrix.docker-file.path }}/Dockerfile
          build-args: |
            REFRESHED_AT=$(date +%Y-%m-%d)
            ${{ matrix.docker-file.path == 'jdk/8' && format('JDK8_VERSION={0}', env.JDK8_VERSION) || '' }}
            ${{ matrix.docker-file.path == 'jdk/8' && format('JDK8_UPDATE={0}', env.JDK8_UPDATE) || '' }}
            ${{ matrix.docker-file.path == 'jdk/8' && format('JDK8_BUILD={0}', env.JDK8_BUILD) || '' }}
            ${{ matrix.docker-file.path == 'jdk/11' && format('JDK11_VERSION={0}', env.JDK11_VERSION) || '' }}
            ${{ matrix.docker-file.path == 'jdk/11' && format('JDK11_UPDATE={0}', env.JDK11_UPDATE) || '' }}
            ${{ matrix.docker-file.path == 'jdk/11' && format('JDK11_BUILD={0}', env.JDK11_BUILD) || '' }}
            ${{ matrix.docker-file.path == 'jdk/17' && format('JDK17_VERSION={0}', env.JDK17_VERSION) || '' }}
            ${{ matrix.docker-file.path == 'jdk/17' && format('JDK17_UPDATE={0}', env.JDK17_UPDATE) || '' }}
            ${{ matrix.docker-file.path == 'jdk/17' && format('JDK17_BUILD={0}', env.JDK17_BUILD) || '' }}
            ${{ matrix.docker-file.path == 'jdk/21' && format('JDK21_VERSION={0}', env.JDK21_VERSION) || '' }}
            ${{ matrix.docker-file.path == 'jdk/21' && format('JDK21_UPDATE={0}', env.JDK21_UPDATE) || '' }}
            ${{ matrix.docker-file.path == 'jdk/21' && format('JDK21_BUILD={0}', env.JDK21_BUILD) || '' }}
          platforms: ${{ matrix.docker-file.platforms }}
          tags: ${{ steps.prepare.outputs.tags }}

      - name: Clear
        if: always() && github.event_name != 'pull_request'
        run: |
          rm -f ${HOME}/.docker/config.json
